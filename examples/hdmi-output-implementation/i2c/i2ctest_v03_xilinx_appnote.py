from Adafruit_I2C import Adafruit_I2C 
from time import *
import os

regReadAddress = [0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 
0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10, 0x11, 0x12, 0x13, 0x14, 
0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20, 
0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 
0x2D, 0x2E, 0x34, 0x36, 0x3C]


io1 = Adafruit_I2C(address = 0x38, debug = False )
io2 = Adafruit_I2C(address = 0x39, debug = False )
vga = Adafruit_I2C(address = 0x4c, debug = True )


writeData = [ 
# Input & Output Configuration
[ 0x1E, 0xB4],    # 0x1E: Input select=0, PWRDWN Polarity to 1 (+) instead of (-) hence B4 instead of B0
[ 0x1F, 0x94],    # 0x1F: Output Sel 1
[ 0x20, 0x05],    # 0x20: Output Sel 2

# Analog settings
[ 0x05, 0x40],    # 0x05: red gain[8:2]
[ 0x06, 0x00],    # 0x06: red gain[1:0]
[ 0x07, 0x40],    # 0x07: grn gain[8:2]
[ 0x08, 0x00],    # 0x08: grn gain[1:0]
[ 0x09, 0x40],    # 0x09: blu gain[8:2]
[ 0x0A, 0x00],    # 0x0A: blu gain[1:0]
[ 0x0B, 0x00],    # 0x0B: red offset[10:3]
[ 0x0C, 0x80],    # 0x0C: red offset[2:0]
[ 0x0D, 0x00],    # 0x0D: grn offset[10:3]
[ 0x0E, 0x80],    # 0x0E: grn offset[2:0]
[ 0x0F, 0x00],    # 0x0F: blu offset[10:3]
[ 0x10, 0x80],    # 0x10: blu offset[2:0]
[ 0x1B, 0x3B],    # 0x1B: Clamp and offset, Turn on auto offset
[ 0x3C, 0x0E],    # 0x3C: Auto Gain, Enable auto gain matching

# Required Test Register Writes
[ 0x2D, 0xE8],    # 
[ 0x2E, 0xE0],    # 
[ 0x28, 0xBF],    #
[ 0x29, 0x02],    #

# Timing settings
[ 0x01, 0x54],    # 0x01: PLLDIV[11:4]
[ 0x02, 0x00],    # 0x02: PLLDIV[3:0] 
[ 0x03, 0xA0],    # 0x03: VCO Ctrl
[ 0x04, 0x80],    # 0x04: Phase adjust
[ 0x13, 136 ],    # 0x13: HS width
[ 0x19, 4   ],    # 0x19: Clamp Placement
[ 0x1A, 130 ]]    # 0x1A: Clamp duration


for i in range(10):
	io1.write8(0, 0x55)
	io2.write8(0, 0xaa)
	sleep(0.1)
	io1.write8(0, 0xAA)
	io2.write8(0, 0x55)
	sleep(0.1)

io1.write8(0, 0xff)
io2.write8(0, 0xff)


for i in range(len(regReadAddress)):
	hex(vga.readU8(regReadAddress[i]))

for i in range(len(writeData)):
	vga.write8(writeData[i][0], writeData[i][1])

for i in range(len(regReadAddress)):
	hex(vga.readU8(regReadAddress[i]))


